#!/usr/bin/perl -w
use strict;
use warnings;
use CPAN::Mini::App;
CPAN::Mini::App->run;

# PODNAME: minicpan
# ABSTRACT: uses CPAN::Mini to create or update a local mirror

__END__

=head1 SYNOPSIS

 minicpan [options]

 Options
   -l LOCAL    - where is the local minicpan?
   -r REMOTE   - where is the remote cpan mirror?
   -d 0###     - permissions (numeric) to use when creating directories
   -f          - check all directories, even if indices are unchanged
   -p          - mirror perl, ponie, and parrot distributions
   --debug     - run in debug mode (print even banal messages)
   -q          - run in quiet mode (don't print status)
   -qq         - run in silent mode (don't even print warnings)
   -c CLASS    - what class to use to mirror (default: CPAN::Mini)
   -C FILE     - what config file to use
   -h          - print help and exit
   -v          - print version and exit
   -x          - build an exact mirror, getting even normally disallowed files
   -t SEC      - timeout in sec. Defaults to 180 sec
   --offline   - operate in offline mode (generally: do nothing)
   --log-level - provide a log level; instead of --debug, -q, or -qq
   --remote-from TYPE - cpan remote from 'cpan' or 'cpanplus' configs

=head1 DESCRIPTION

This simple shell script just updates (or creates) a miniature CPAN mirror as
described in CPAN::Mini.

=head1 LOCAL MINICPAN LOCATION

C<minicpan> will create the local minicpan in F<$XDG_CACHE_HOME/minicpan> by
default, or F<$HOME/.cache/minicpan> if C<XDG_CACHE_HOME> is not set. This can
be changed with the c<-l> command line option or by specifying a directory in
the configuration file.

=head1 CONFIGURATION FILE

By default, C<minicpan> will read a configuration file to get configuration
information.  The file is a simple set of names and values, as in the following
example:

 local:  /home/rjbs/mirrors/minicpan/
 remote: http://your.favorite.cpan/cpan/
 exact_mirror: 1
 
C<minicpan> tries to find a configuration file through the following process.
It takes the first defined it finds:

=over 4

=item * Use the value specified by C<-C> on the command line

=item * Use the value in the C<CPAN_MINI_CONFIG> environment variable

=item * Use F<$XDG_CONFIG_HOME/minicpan/config>, or use F<$HOME/.config/minicpan/config> if C<XDG_CONFIG_HOME> is not set

=item * Use F<~/.minicpanrc>

=item * Use F<CPAN/Mini/minicpan.conf>

=back

If the selected file does not exist, C<minicpan> does not keep looking.

You can override this process with a C<config_file> method in your subclass.

See C<CPAN::Mini> for a full listing of available options.

=head1 TO DO

Improve command-line options.

=head1 SEE ALSO 

Randal Schwartz's original article, which can be found here:

  http://www.stonehenge.com/merlyn/LinuxMag/col42.html

=cut
